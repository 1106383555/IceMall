<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.crayon.dao.OrderDao">

    <select id="countOrders" resultType="Integer">
        select count(*)
        from orders;
    </select>

    <select id="countUserOrdersByProId" resultType="Integer">
        select count(*) from customer c
        join orders o on c.userId = o.userId
        join orderproductlist op on o.orderId = op.orderId
        join productlist p on op.proListId = p.proListId
        where p.proId = #{proId} and c.userId = #{userId} and o.ordStatus = 6;
    </select>

    <select id="listAllOrders" resultType="com.crayon.pojo.Order">
        select * from orders;
    </select>

    <!-- 根据orderId查询-->
    <select id="listOrdersById" parameterType="Integer" resultType="com.crayon.pojo.Order">
        SELECT * FROM orders
        where orderId = #{orderId};
    </select>

    <!-- 根据客户Id获取订单-->
    <select id="listOrdersByCusId" parameterType="Integer" resultType="com.crayon.pojo.Order">
        SELECT * FROM orders
        where userId = #{cusId};
    </select>

    <!-- 根据销售管理员Id获取相应订单-->
    <select id="listOrdersBySalesEmpId" parameterType="Integer" resultType="com.crayon.pojo.Order">
        SELECT * FROM orders
        where resEId = #{salesEmpId};
    </select>

    <!-- 根据物流管理员Id获取相应送货的订单-->
    <select id="listOrdersByTransEmpId" parameterType="Integer" resultType="com.crayon.pojo.Order">
        SELECT o.orderId,o.ordStatus,o.userId,o.ordCreationTime,
        o.ordPayTime,o.transId,o.ordTotPrice,o.resEId
        FROM orders o
        join transportation t on o.transId = t.transId
        where t.resEId =  #{transEmpId};
    </select>

    <!-- 根据order主码查询-->
    <select id="getOrderByKey" parameterType="Integer" resultType="com.crayon.pojo.Order">
        SELECT * FROM orders
        where orderId = #{orderId};
    </select>


    <!--获取当日销售额-->
    <select id="getSalesPriceDaily" resultType="Float">
        select round(ifnull(sum(ordTotPrice),0),3) from orders
        where
        extract(year from ordPayTime) = #{year} and
        extract(month from ordPayTime) = #{month} and
        extract(day from ordPayTime) = #{day} and
        ordStatus != 7 and ordStatus >= 2;
    </select>

    <!--获取当日总销售量-->
    <select id="getSalesDaily" resultType="Integer">
        select ifnull(sum(p.purQuantity),0) from orders o
        join orderproductlist op on o.orderId = op.orderId
        join productlist p on op.proListId = p.proListId
        where
        extract(year from o.ordPayTime) = #{year} and
        extract(month from o.ordPayTime) = #{month} and
        extract(day from o.ordPayTime) = #{day} and
        o.ordStatus != 7 and o.ordStatus >= 2;
    </select>

    <!--统计指定日期销量TOP n-->
    <select id="listTopSalesProductsDaily" resultType="com.crayon.dto.ProductDaily">
        select p.proId as proId,sum(p.purQuantity) as sales,
        (select pro.proName from product pro where pro.proId = p.proId) as proName
        from orders o
        join orderproductlist op on o.orderId = op.orderId
        join productlist p on op.proListId = p.proListId
        where extract(year from o.ordPayTime) = #{year}
          and extract(month from o.ordPayTime) = #{month}
          and extract(day from o.ordPayTime) = #{day}
          and o.ordStatus != 7
          and o.ordStatus >= 2
        group by p.proId
        order by sales desc
        limit 0,#{n};
    </select>


    <!--统计累积销量TOP n-->
    <select id="listTopSalesProIds" parameterType="Integer" resultType="Integer">
        select p.proId as proId
        from orders o
        join orderproductlist op on o.orderId = op.orderId
        join productlist p on op.proListId = p.proListId
        where o.ordStatus != 7 and o.ordStatus >= 2
        group by p.proId
        order by sum(p.purQuantity) desc
        limit 0,#{n};
    </select>

    <!--根据用户id查询订单总数-->
    <select id="countOrderByUserId" parameterType="Integer" resultType="Integer">
        select count(*)
        from orders
        where userId = #{userId};
    </select>

    <!--根据用户id查询订单总金额-->
    <select id="getTotPriceByUserId" parameterType="Integer" resultType="Float">
        select ifnull(sum(ordTotPrice),0)  from orders
        where userId = #{userId} and ordStatus!=7 and ordStatus>=2;
    </select>


    <!-- 新增订单 -->
    <insert id="insert" parameterType="com.crayon.pojo.Order"
            useGeneratedKeys="true" keyProperty="orderId">
        insert into orders(ordStatus, userId, ordCreationTime, ordPayTime, transId, ordTotPrice, resEId)
        values (#{ordStatus}, #{userId}, #{ordCreationTime},#{ordPayTime},#{transId}, #{ordTotPrice}, #{resEId});
    </insert>

    <!--更新订单-->
    <update id="update" parameterType="com.crayon.pojo.Order">
        update orders
        <set>
            <if test="ordStatus!=null">
                ordStatus = #{ordStatus},
            </if>
            <if test="userId!=null">
                userId = #{userId},
            </if>
            <if test="ordCreationTime!=null">
                ordCreationTime = #{ordCreationTime},
            </if>
            <if test="ordPayTime!=null">
                ordPayTime = #{ordPayTime},
            </if>
            <if test="transId!=null">
                transId = #{transId},
            </if>
            <if test="ordTotPrice!=null">
                ordTotPrice = #{ordTotPrice},
            </if>
            <if test="resEId!=null">
                resEId = #{resEId},
            </if>
        </set>
        where orderId = #{orderId};
    </update>

    <delete id="deleteById" parameterType="Integer">
        delete from orders
        where orderId = #{orderId}
    </delete>

    <delete id="deleteByKey" parameterType="Integer">
        delete from orders
        where orderId = #{orderId}
    </delete>

</mapper>