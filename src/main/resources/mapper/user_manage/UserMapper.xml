<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.crayon.dao.user_manage.UserDao">


    <select id="countUsers">
        select count (*)
        from users;
    </select>


    <select id="listAllUsers" resultType="com.crayon.pojo.user_manage.User">
        select * from users;
    </select>

    <!-- 根据ID查询用户 -->
    <select id="listUsersById" parameterType="Integer"
            resultType="com.crayon.pojo.user_manage.User">
        SELECT * FROM users
        WHERE userId = #{userId}
    </select>

    <!-- 根据主码查询用户 -->
    <select id="getUserByKey" parameterType="Integer"
            resultType="com.crayon.pojo.user_manage.User">
        SELECT * FROM users
        WHERE userId = #{userId}
    </select>


    <!-- 根据用户名查询 -->
    <select id="getUserByName" parameterType="String"
            resultType="com.crayon.pojo.user_manage.User">
        SELECT * FROM users
        WHERE userName = #{userName};
    </select>



    <!-- 根据用户名获取用户角色名 -->
    <select id="getRolesByUserName" parameterType="String" resultType="String">
        select r.role
        from users u
        join users_roles ur on ur.user_id = u.userId
        join roles r on ur.role_id = r.id
        where u.userName = #{userName};
    </select>

    <!-- 根据用户名获取用户角色名中文昵称 -->
    <select id="getRoleDesByUserName" parameterType="String" resultType="String">
        select r.description
        from users u
        join users_roles ur on ur.user_id = u.userId
        join roles r on ur.role_id = r.id
        where u.userName = #{userName};
    </select>

    <!-- 根据用户名获取用户权限名 -->
    <select id="getPermissionsByUserName" parameterType="String" resultType="String">
        select p.permission
        from users u
        join users_roles ur on ur.user_id = u.userId
        join roles r on ur.role_id = r.id
        join roles_permissions rp on r.id = rp.role_id
        join permissions p on p.id = rp.permission_id
        where u.userName = #{userName};
    </select>

    <!-- 根据用户名获取用户等级信息-->
    <select id="getCusLevelByUserName" parameterType="String"
            resultType="com.crayon.pojo.CusLevel">
        select cl.cusLevelId,cl.levelName,cl.levelDiscount
        from users
        join customer c on users.userId = c.userId
        join cuslevel cl on c.cusLevelId = cl.cusLevelId
        where users.userName = #{userName};
    </select>

    <!-- 根据用户名获取用户地址信息-->
    <select id="getUserAddressByUserName" parameterType="String"
            resultType="com.crayon.dto.UserAddress">
        select userName,address,phoneNumber from users
        where userName = #{userName};
    </select>

    <!-- 创建用户 -->
    <insert id="insert" parameterType="com.crayon.pojo.user_manage.User"
            useGeneratedKeys="true" keyProperty="userId">
        INSERT INTO users(userName, password, salt, email, phoneNumber, address, registerDate, birthday)
        VALUES
        (#{userName},#{password},#{salt},
        #{email},#{phoneNumber},#{address},#{registerDate},#{birthday});
    </insert>

    <insert id="linkRole">
        insert into users_roles
        values (null,#{userId},(select id from roles where role=#{roleName}))
    </insert>


    <!-- 更新用户信息 -->
    <update id="update" parameterType="com.crayon.pojo.user_manage.User">
        UPDATE users
        <set>
            <if test="userName != null">
                userName = #{userName},
            </if>
            <if test="password != null">
                password = #{password},
            </if>
            <if test="salt != null">
                salt = #{salt},
            </if>
            <if test="email != null">
                email = #{email},
            </if>
            <if test="phoneNumber != null">
                phoneNumber = #{phoneNumber},
            </if>
            <if test="address != null">
                address = #{address},
            </if>
            <if test="registerDate != null">
                registerDate = #{registerDate},
            </if>
            <if test="birthday != null">
                birthday = #{birthday},
            </if>
        </set>
        WHERE userId = #{userId};
    </update>

    <!-- 通过Id移除用户 -->
    <delete id="delete" parameterType="Integer">
        DELETE FROM users
        WHERE userId = #{userId};
    </delete>

    <!-- 通过主码移除用户 -->
    <delete id="deleteByKey" parameterType="Integer">
        DELETE FROM users
        WHERE userId = #{userId};
    </delete>

</mapper>