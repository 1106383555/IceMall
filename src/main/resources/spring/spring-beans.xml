<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">



    <!-- 加载配置文件 -->
    <context:property-placeholder location="classpath:db.properties" />
    <!-- 自动扫描与装配dao -->
    <context:component-scan base-package="com.crayon"/>

    <!-- 数据源，使用dbcp -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <property name="maxActive" value="10" />
    </bean>

    <!-- 事务回滚 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- 启用事务注解 -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

    <tx:advice id="txAdvice" transaction-manager="transactionManager" >
        <tx:attributes>
            <tx:method name="*" rollback-for="Exception"/><!--默认回滚机制是RuntimeException-->
        </tx:attributes>
    </tx:advice>


    <aop:config>
        <aop:pointcut id="txPoint" expression="execution(* com.crayon.service.impl..*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"></aop:advisor>
    </aop:config>

    <!-- sqlSessinFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 加载mybatis的配置文件 -->
        <property name="configLocation" value="classpath:mybatis/mybatis.xml" />
        <!-- 数据源 -->
        <property name="dataSource" ref="dataSource" />

        <!-- 扫描Mapper层的配置文件
        ...不这么配置会出错！不能逗号分
        需要加classpath，不然shiro会报错
        -->
        <property name="mapperLocations" value="classpath*:/mapper/**/*.xml"/>
    </bean>

    <!-- DAO接口所在包名，Spring会自动查找其下的类并注入到Spring的容器中 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="
            com.crayon.dao.user_manage,
            com.crayon.dao
        "/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>



</beans>